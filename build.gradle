plugins {
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springVersion
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springVersion
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springVersion
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: springVersion
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springVersion
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: springVersion

        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: jsonWebTokenVersion

        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion

        compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitVersion
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springVersion
        testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: springSecurityTest
    }

    jar {
        manifest.attributes('Main-Class': 'com.epam.esm.Application');
    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
        }
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
    }
}

test {
    finalizedBy jacocoTestReport
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}